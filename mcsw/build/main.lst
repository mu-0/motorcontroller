ARM GAS  /tmp/cc9nbumL.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB45:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/cc9nbumL.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
  88:Core/Src/main.c ****   MX_GPIO_Init();
  89:Core/Src/main.c ****   MX_USB_DEVICE_Init();
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/cc9nbumL.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Infinite loop */
  95:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  96:Core/Src/main.c ****   while (1)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****     /* USER CODE END WHILE */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c ****   /* USER CODE END 3 */
 103:Core/Src/main.c **** }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****   * @brief System Clock Configuration
 107:Core/Src/main.c ****   * @retval None
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** void SystemClock_Config(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 113:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 116:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48;
 119:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 121:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     Error_Handler();
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 126:Core/Src/main.c ****   */
 127:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 128:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 129:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 130:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 131:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     Error_Handler();
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 138:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  /tmp/cc9nbumL.s 			page 4


 148:Core/Src/main.c ****   * @param None
 149:Core/Src/main.c ****   * @retval None
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c **** static void MX_GPIO_Init(void)
 152:Core/Src/main.c **** {
  26              		.loc 1 152 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 155:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  34              		.loc 1 155 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 155 3 view .LVU2
  37              		.loc 1 155 3 view .LVU3
  38 0002 064A     		ldr	r2, .L2
  39 0004 5169     		ldr	r1, [r2, #20]
  40 0006 8020     		movs	r0, #128
  41 0008 8002     		lsls	r0, r0, #10
  42 000a 0143     		orrs	r1, r0
  43 000c 5161     		str	r1, [r2, #20]
  44              		.loc 1 155 3 view .LVU4
  45 000e 5369     		ldr	r3, [r2, #20]
  46 0010 0340     		ands	r3, r0
  47 0012 0193     		str	r3, [sp, #4]
  48              		.loc 1 155 3 view .LVU5
  49 0014 019B     		ldr	r3, [sp, #4]
  50              	.LBE4:
  51              		.loc 1 155 3 view .LVU6
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** }
  52              		.loc 1 157 1 is_stmt 0 view .LVU7
  53 0016 02B0     		add	sp, sp, #8
  54              		@ sp needed
  55 0018 7047     		bx	lr
  56              	.L3:
  57 001a C046     		.align	2
  58              	.L2:
  59 001c 00100240 		.word	1073876992
  60              		.cfi_endproc
  61              	.LFE45:
  63              		.section	.text.Error_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	Error_Handler
  66              		.syntax unified
  67              		.code	16
  68              		.thumb_func
  69              		.fpu softvfp
  71              	Error_Handler:
  72              	.LFB46:
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/cc9nbumL.s 			page 5


 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /* USER CODE END 4 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void Error_Handler(void)
 168:Core/Src/main.c **** {
  73              		.loc 1 168 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
 169:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 170:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 171:Core/Src/main.c ****   __disable_irq();
  79              		.loc 1 171 3 view .LVU9
  80              	.LBB5:
  81              	.LBI5:
  82              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  /tmp/cc9nbumL.s 			page 6


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  /tmp/cc9nbumL.s 			page 7


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  83              		.loc 2 140 27 view .LVU10
  84              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  85              		.loc 2 142 3 view .LVU11
  86              		.syntax divided
  87              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  88 0000 72B6     		cpsid i
  89              	@ 0 "" 2
ARM GAS  /tmp/cc9nbumL.s 			page 8


  90              		.thumb
  91              		.syntax unified
  92              	.L5:
  93              	.LBE6:
  94              	.LBE5:
 172:Core/Src/main.c ****   while (1)
  95              		.loc 1 172 3 discriminator 1 view .LVU12
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****   }
  96              		.loc 1 174 3 discriminator 1 view .LVU13
 172:Core/Src/main.c ****   while (1)
  97              		.loc 1 172 9 discriminator 1 view .LVU14
  98 0002 FEE7     		b	.L5
  99              		.cfi_endproc
 100              	.LFE46:
 102              		.section	.text.SystemClock_Config,"ax",%progbits
 103              		.align	1
 104              		.global	SystemClock_Config
 105              		.syntax unified
 106              		.code	16
 107              		.thumb_func
 108              		.fpu softvfp
 110              	SystemClock_Config:
 111              	.LFB44:
 110:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 112              		.loc 1 110 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 96
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 00B5     		push	{lr}
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 14, -4
 120 0002 99B0     		sub	sp, sp, #100
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 104
 111:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 111 3 view .LVU16
 111:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124              		.loc 1 111 22 is_stmt 0 view .LVU17
 125 0004 3422     		movs	r2, #52
 126 0006 0021     		movs	r1, #0
 127 0008 0BA8     		add	r0, sp, #44
 128 000a FFF7FEFF 		bl	memset
 129              	.LVL0:
 112:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 130              		.loc 1 112 3 is_stmt 1 view .LVU18
 112:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 131              		.loc 1 112 22 is_stmt 0 view .LVU19
 132 000e 1022     		movs	r2, #16
 133 0010 0021     		movs	r1, #0
 134 0012 07A8     		add	r0, sp, #28
 135 0014 FFF7FEFF 		bl	memset
 136              	.LVL1:
 113:Core/Src/main.c **** 
 137              		.loc 1 113 3 is_stmt 1 view .LVU20
 113:Core/Src/main.c **** 
ARM GAS  /tmp/cc9nbumL.s 			page 9


 138              		.loc 1 113 28 is_stmt 0 view .LVU21
 139 0018 1822     		movs	r2, #24
 140 001a 0021     		movs	r1, #0
 141 001c 01A8     		add	r0, sp, #4
 142 001e FFF7FEFF 		bl	memset
 143              	.LVL2:
 118:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 144              		.loc 1 118 3 is_stmt 1 view .LVU22
 118:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 145              		.loc 1 118 36 is_stmt 0 view .LVU23
 146 0022 2023     		movs	r3, #32
 147 0024 0B93     		str	r3, [sp, #44]
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 148              		.loc 1 119 3 is_stmt 1 view .LVU24
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 149              		.loc 1 119 32 is_stmt 0 view .LVU25
 150 0026 1F3B     		subs	r3, r3, #31
 151 0028 1393     		str	r3, [sp, #76]
 120:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152              		.loc 1 120 3 is_stmt 1 view .LVU26
 121:Core/Src/main.c ****   {
 153              		.loc 1 121 3 view .LVU27
 121:Core/Src/main.c ****   {
 154              		.loc 1 121 7 is_stmt 0 view .LVU28
 155 002a 0BA8     		add	r0, sp, #44
 156 002c FFF7FEFF 		bl	HAL_RCC_OscConfig
 157              	.LVL3:
 121:Core/Src/main.c ****   {
 158              		.loc 1 121 6 view .LVU29
 159 0030 0028     		cmp	r0, #0
 160 0032 18D1     		bne	.L10
 127:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 161              		.loc 1 127 3 is_stmt 1 view .LVU30
 127:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 162              		.loc 1 127 31 is_stmt 0 view .LVU31
 163 0034 0723     		movs	r3, #7
 164 0036 0793     		str	r3, [sp, #28]
 129:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165              		.loc 1 129 3 is_stmt 1 view .LVU32
 129:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 166              		.loc 1 129 34 is_stmt 0 view .LVU33
 167 0038 043B     		subs	r3, r3, #4
 168 003a 0893     		str	r3, [sp, #32]
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 169              		.loc 1 130 3 is_stmt 1 view .LVU34
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 170              		.loc 1 130 35 is_stmt 0 view .LVU35
 171 003c 0023     		movs	r3, #0
 172 003e 0993     		str	r3, [sp, #36]
 131:Core/Src/main.c **** 
 173              		.loc 1 131 3 is_stmt 1 view .LVU36
 131:Core/Src/main.c **** 
 174              		.loc 1 131 36 is_stmt 0 view .LVU37
 175 0040 0A93     		str	r3, [sp, #40]
 133:Core/Src/main.c ****   {
 176              		.loc 1 133 3 is_stmt 1 view .LVU38
 133:Core/Src/main.c ****   {
ARM GAS  /tmp/cc9nbumL.s 			page 10


 177              		.loc 1 133 7 is_stmt 0 view .LVU39
 178 0042 0121     		movs	r1, #1
 179 0044 07A8     		add	r0, sp, #28
 180 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 181              	.LVL4:
 133:Core/Src/main.c ****   {
 182              		.loc 1 133 6 view .LVU40
 183 004a 0028     		cmp	r0, #0
 184 004c 0DD1     		bne	.L11
 137:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 185              		.loc 1 137 3 is_stmt 1 view .LVU41
 137:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 186              		.loc 1 137 38 is_stmt 0 view .LVU42
 187 004e 8023     		movs	r3, #128
 188 0050 9B02     		lsls	r3, r3, #10
 189 0052 0193     		str	r3, [sp, #4]
 138:Core/Src/main.c **** 
 190              		.loc 1 138 3 is_stmt 1 view .LVU43
 138:Core/Src/main.c **** 
 191              		.loc 1 138 35 is_stmt 0 view .LVU44
 192 0054 0023     		movs	r3, #0
 193 0056 0693     		str	r3, [sp, #24]
 140:Core/Src/main.c ****   {
 194              		.loc 1 140 3 is_stmt 1 view .LVU45
 140:Core/Src/main.c ****   {
 195              		.loc 1 140 7 is_stmt 0 view .LVU46
 196 0058 01A8     		add	r0, sp, #4
 197 005a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 198              	.LVL5:
 140:Core/Src/main.c ****   {
 199              		.loc 1 140 6 view .LVU47
 200 005e 0028     		cmp	r0, #0
 201 0060 05D1     		bne	.L12
 144:Core/Src/main.c **** 
 202              		.loc 1 144 1 view .LVU48
 203 0062 19B0     		add	sp, sp, #100
 204              		@ sp needed
 205 0064 00BD     		pop	{pc}
 206              	.L10:
 123:Core/Src/main.c ****   }
 207              		.loc 1 123 5 is_stmt 1 view .LVU49
 208 0066 FFF7FEFF 		bl	Error_Handler
 209              	.LVL6:
 210              	.L11:
 135:Core/Src/main.c ****   }
 211              		.loc 1 135 5 view .LVU50
 212 006a FFF7FEFF 		bl	Error_Handler
 213              	.LVL7:
 214              	.L12:
 142:Core/Src/main.c ****   }
 215              		.loc 1 142 5 view .LVU51
 216 006e FFF7FEFF 		bl	Error_Handler
 217              	.LVL8:
 218              		.cfi_endproc
 219              	.LFE44:
 221              		.section	.text.main,"ax",%progbits
 222              		.align	1
ARM GAS  /tmp/cc9nbumL.s 			page 11


 223              		.global	main
 224              		.syntax unified
 225              		.code	16
 226              		.thumb_func
 227              		.fpu softvfp
 229              	main:
 230              	.LFB43:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 231              		.loc 1 66 1 view -0
 232              		.cfi_startproc
 233              		@ Volatile: function does not return.
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 10B5     		push	{r4, lr}
 237              	.LCFI3:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 241              		.loc 1 74 3 view .LVU53
 242 0002 FFF7FEFF 		bl	HAL_Init
 243              	.LVL9:
  81:Core/Src/main.c **** 
 244              		.loc 1 81 3 view .LVU54
 245 0006 FFF7FEFF 		bl	SystemClock_Config
 246              	.LVL10:
  88:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 247              		.loc 1 88 3 view .LVU55
 248 000a FFF7FEFF 		bl	MX_GPIO_Init
 249              	.LVL11:
  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 250              		.loc 1 89 3 view .LVU56
 251 000e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 252              	.LVL12:
 253              	.L14:
  96:Core/Src/main.c ****   {
 254              		.loc 1 96 3 discriminator 1 view .LVU57
 101:Core/Src/main.c ****   /* USER CODE END 3 */
 255              		.loc 1 101 3 discriminator 1 view .LVU58
  96:Core/Src/main.c ****   {
 256              		.loc 1 96 9 discriminator 1 view .LVU59
 257 0012 FEE7     		b	.L14
 258              		.cfi_endproc
 259              	.LFE43:
 261              		.text
 262              	.Letext0:
 263              		.file 3 "/home/gray/arm-gcc/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 264              		.file 4 "/home/gray/arm-gcc/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 265              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 266              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 267              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 268              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 269              		.file 9 "USB_DEVICE/App/usb_device.h"
 270              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 271              		.file 11 "<built-in>"
ARM GAS  /tmp/cc9nbumL.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc9nbumL.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc9nbumL.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc9nbumL.s:59     .text.MX_GPIO_Init:000000000000001c $d
     /tmp/cc9nbumL.s:64     .text.Error_Handler:0000000000000000 $t
     /tmp/cc9nbumL.s:71     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc9nbumL.s:103    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc9nbumL.s:110    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc9nbumL.s:222    .text.main:0000000000000000 $t
     /tmp/cc9nbumL.s:229    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
